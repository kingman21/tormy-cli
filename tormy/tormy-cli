#!/usr/bin/env python3

import scrapy
import argparse
import json
import requests
from requests.auth import HTTPDigestAuth

from tormy.spiders import tormy_spider
from scrapy.crawler import CrawlerProcess


# Colors for text on stdout
class Colors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'


class PrintResult:

    # URL shortener for magnet links
    # Currently the "mgnet.me" magnet link shortener is used to shorten links.
    def shorten_magnet_uri(magnet_uri):
        base_url = "http://mgnet.me/api/create?m="
        request_url = base_url + magnet_uri

        shortner_response = requests.get(request_url)
        if(shortner_response.ok):
            resultJSON = json.loads(shortner_response.content)
            shorturl = resultJSON['shorturl']
            return shorturl
        else:
            myResponse.raise_for_status()

    # Get results from items.jl and print.
    def output_results():
        # If the results.jl file contains content, it implies that the search has yielded relevant results and it will be printed to stdout.
        try:
            with open('results.jl', 'r') as results:
                json_results = json.load(results)
                for i in range(len(json_results['name'])):
                    title = json_results['name'][i]
                    details = json_results['info'][i]
                    total_seeders = json_results['seeders'][i]
                    total_leechers = json_results['leechers'][i]
                    magnet_uri = PrintResult.shorten_magnet_uri(json_results['magnet'][i])

                    print("\n" + Colors.OKGREEN + "{}".format(title) + Colors.ENDC)
                    print(Colors.HEADER + "{}".format(details) + Colors.ENDC)
                    print(Colors.OKGREEN + "Seeders(" + u'\u2191' + "): " + "{}".format(total_seeders) + Colors.ENDC,Colors.FAIL + "Leechers(" + u'\u2193' + "): "  + "{}".format(total_leechers) + Colors.ENDC)
                    print("Magnet Link: " + Colors.OKBLUE + Colors.UNDERLINE + "{}".format(magnet_uri) + Colors.ENDC)

        # If the results.jl file is empty, it implies that the search did not yield any result and accordingly message will be printed.
        except:
            print(Colors.FAIL + "No results! Try different keywords." + Colors.ENDC)



# The condition in this 'if' statement means that this script wasn't executed by importing into another script. It means that this script was executed directly.
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Search for torrents through the terminal.')
    parser.add_argument('query', action='store', type=str, help='Enter text within quotes to search for torrents.\nExample = tormy-cli \"the matrix\"')
    args = vars(parser.parse_args())
    input_query = args['query']

    process = CrawlerProcess({
        'USER_AGENT': 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)'
    })

    my_spider = tormy_spider.TorrentSpider()

    # Pass the qurery input by the user into the Spider.
    process.crawl(my_spider, input_query)
    process.start()

    # After the Spider is finished crawling and the pipeline is done processing, print the results.
    PrintResult.output_results()